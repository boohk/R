# **************************************
# 데이터 과학 세미나 소스코드 03_형태소/빈도분석/워드클라우드
# 2017.03.23 Boo, Hyun-Kyung
# brainaboo@kookmin.ac.kr
# 수정 후 배포 금지
# **************************************

# install.packages('rJava') & install.packages('KoNLP') & install.packages('wordcloud') & install.packages('RColorBrewer')
# library('KoNLP') & library('wordcloud') & library('RColorBrewer')


# KoNLP의 세종 사전 사용#
useSejongDic()

# .txt 파일은 한 줄씩 읽기
txtdata<-readLines("dss03_data.txt")
txtdata

# 전부 출력 말고 앞부분만 출력
# head(txtdata)


#현재의 사전에 단어를 추가 - 사전 업데이트의 개념
#'ncn' : 비서술성 명사 - kaist 품사셋 확인
#mergeUserDic(data.frame(c('add1','add2','add3','add4','add5','add6','add7'),'ncn'))


#명사 추출하기
nouns <-sapply(txtdata,extractNoun,USE.NAMES=F)
nouns #list로 변환
# nouns <-sapply(한줄_ 불러온_데이터,extractNoun,USE.NAMES=F)는 nouns의 형식이 list로 변환
# Ex) 1개의 행에 c(1, ...,i)개가 존재
# List of 1
# $ : chr [1:24] "999" "음악" "스토리" "영상" ...
# > str(nouns[999])
# List of 1
# $ : chr [1:6] "998" "아름다움" "자체" "시험" ...
# >
 
# head(nouns)


# 벡터값으로 반환함
rawNouns<-unlist(nouns)

# 데이터 저장
write(rawNouns,"rawNoun_review_mix.txt")
# rawNouns

# nchar(var_name) : 글자 수 반환
# rawNouns 데이터 중에서 두글자 이상인 것을 골라 다시 ManNouns에 저장
ManNouns<-rawNouns[nchar(rawNouns)>=2]
# ManNouns

# 변수이름 <-gsub("변환할 값","대체 값",사용변수이름)
# stop 리스트와 같음
# 여기서 주의할 점은 지울 데이터를 한번에 알 수 없기 때문에 
# 반복 과정이 필요할 수 있다.

ManNouns<-gsub("final_data","",ManNouns) #final_data 제외
ManNouns<-gsub("\\d+","",ManNouns) #숫자 제외
ManNouns<-gsub("\\(","",ManNouns)  #)괄호 제외
ManNouns<-gsub("\"","",ManNouns)   #'' 제외
ManNouns<-gsub("<.*?>>","",ManNouns)#'' 제외
ManNouns<-gsub("&quot;|&#39;|&#;","",ManNouns) #&quot; / &#39; / &#; 제외
ManNouns<-gsub("&lt|&gt","",ManNouns) # &lt / &gt제외
ManNouns<-gsub("영화","",ManNouns) #영화 제외
ManNouns<-gsub("네이버+.*?","",ManNouns) #네이버가 붙은 모든 말 제외

# 저장
write(unlist(nouns),"noun_review_mix.txt")
ManNouns<-read.table('noun_review_mix.txt')

#빈도 분석 : 사용시에 제거가 필요한 부분을 확인 할 수 있다.
wordfreq<-table(nouns)
wordfreq

# 가장 많이 노출된 단어 출력 (이 코드는 상위 40개 노출 단어)
head(sort(wordfreq, decreasing=T),40 )

#컬러 출력 라이브러리 로딩#
library(RColorBrewer)
library(wordcloud)
display.brewer.all()
pal=brewer.pal(5,"Dark2")

#폰트 설정
windowsFonts()
windowsFonts(malgun=windowsFont("맑은 고딕"))

#이미지 저장을 위한 함수 호출 : 미호출시 에러 발생 가능
windows()

#워드클라우드 #
wordcloud(words=names(wordfreq),freq=wordfreq,scale=c(7,0.8),colors=pal,min.freq=5,random.order=F,random.color=T,family="malgun")

#이미지 저장
savePlot("review.png",type="png")
